Not using CUDA
Logging to /Users/minqijiang/logs/autodrac

Update 0, step 1024 
 Last 6 training episodes: mean/median reward 0.5/0.5
Last 10 test episodes: mean/median reward 1.0/0.0

> /Users/minqijiang/research/reference/auto-drac/train.py(282)train()
-> wandb.log(stats)
(Pdb) {'train/nupdates': 0, 'train/total_num_steps': 1024, 'losses/dist_entropy': 2.7075718343257904, 'losses/value_loss': 0.895644411444664, 'losses/action_loss': -0.002585802615309755, 'train/mean_episode_reward': 0.5, 'train/median_episode_reward': 0.5, 'test/mean_episode_reward': 1.0, 'test/median_episode_reward': 0.0}
(Pdb) {'train/nupdates': 0, 'train/total_num_steps': 1024, 'losses/dist_entropy': 2.7075718343257904, 'losses/value_loss': 0.895644411444664, 'losses/action_loss': -0.002585802615309755, 'train/mean_episode_reward': 0.5, 'train/median_episode_reward': 0.5, 'test/mean_episode_reward': 1.0, 'test/median_episode_reward': 0.0}
(Pdb) 
Update 1, step 2048 
 Last 10 training episodes: mean/median reward 0.4/0.0
Last 10 test episodes: mean/median reward 0.9/0.0

> /Users/minqijiang/research/reference/auto-drac/train.py(281)train()
-> import pdb; pdb.set_trace()
(Pdb) 
Traceback (most recent call last):
  File "train.py", line 300, in <module>
  File "train.py", line 281, in train
    torch.save({
  File "train.py", line 281, in train
    torch.save({
  File "/Users/minqijiang/miniconda3/envs/auto-drac/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/Users/minqijiang/miniconda3/envs/auto-drac/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
